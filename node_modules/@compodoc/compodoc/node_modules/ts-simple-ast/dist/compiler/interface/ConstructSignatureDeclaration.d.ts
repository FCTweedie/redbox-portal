import * as ts from "typescript";
import { ConstructSignatureDeclarationStructure } from "./../../structures";
import { Node } from "./../common";
import { DocumentationableNode } from "./../base";
import { SignaturedDeclaration } from "./../function";
export declare const ConstructSignatureDeclarationBase: (new (...args: any[]) => DocumentationableNode) & (new (...args: any[]) => SignaturedDeclaration) & typeof Node;
export declare class ConstructSignatureDeclaration extends ConstructSignatureDeclarationBase<ts.ConstructSignatureDeclaration> {
    /**
     * Fills the node from a structure.
     * @param structure - Structure to fill.
     */
    fill(structure: Partial<ConstructSignatureDeclarationStructure>): this;
    /**
     * Removes this construct signature.
     */
    remove(): void;
}
